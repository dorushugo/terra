/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    products: Product;
    'terra-collections': TerraCollection;
    orders: Order;
    customers: Customer;
    addresses: Address;
    'stock-movements': StockMovement;
    'stock-alerts': StockAlert;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'terra-collections': TerraCollectionsSelect<false> | TerraCollectionsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    addresses: AddressesSelect<false> | AddressesSelect<true>;
    'stock-movements': StockMovementsSelect<false> | StockMovementsSelect<true>;
    'stock-alerts': StockAlertsSelect<false> | StockAlertsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * Prénom de l'utilisateur
   */
  firstName: string;
  /**
   * Nom de famille de l'utilisateur
   */
  lastName: string;
  /**
   * Numéro de téléphone (optionnel)
   */
  phone?: string | null;
  /**
   * Date de naissance (optionnelle)
   */
  dateOfBirth?: string | null;
  /**
   * Photo de profil
   */
  avatar?: (number | null) | Media;
  /**
   * Préférences utilisateur
   */
  preferences?: {
    /**
     * Recevoir la newsletter TERRA
     */
    newsletter?: boolean | null;
    /**
     * Recevoir les notifications SMS
     */
    smsNotifications?: boolean | null;
    /**
     * Recevoir les notifications par email
     */
    emailNotifications?: boolean | null;
    language?: ('fr' | 'en') | null;
    currency?: ('EUR' | 'USD') | null;
  };
  /**
   * Commandes de cet utilisateur
   */
  orders?: (number | Order)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Numéro de commande unique (auto-généré)
   */
  orderNumber: string;
  status: 'pending' | 'confirmed' | 'preparing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';
  /**
   * Utilisateur connecté (si applicable)
   */
  user?: (number | null) | User;
  /**
   * Informations du client
   */
  customer: {
    /**
     * Email du client
     */
    email: string;
    firstName: string;
    lastName: string;
    /**
     * Numéro de téléphone (optionnel)
     */
    phone?: string | null;
  };
  /**
   * Articles commandés
   */
  items: {
    /**
     * Produit commandé
     */
    product: number | Product;
    /**
     * Quantité commandée
     */
    quantity: number;
    size: '36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46';
    /**
     * Couleur choisie
     */
    color: string;
    /**
     * Prix unitaire au moment de la commande
     */
    unitPrice: number;
    /**
     * Prix total pour cet item (quantité × prix unitaire)
     */
    totalPrice: number;
    id?: string | null;
  }[];
  /**
   * Détails des prix
   */
  pricing: {
    /**
     * Sous-total (avant frais)
     */
    subtotal: number;
    /**
     * Frais de livraison
     */
    shippingCost?: number | null;
    /**
     * Montant des taxes (TVA)
     */
    taxAmount?: number | null;
    /**
     * Montant de la réduction
     */
    discountAmount?: number | null;
    /**
     * Total final
     */
    total: number;
  };
  /**
   * Adresse de livraison
   */
  shippingAddress: {
    /**
     * Adresse (rue, numéro)
     */
    street: string;
    city: string;
    postalCode: string;
    country: 'FR' | 'BE' | 'CH' | 'LU' | 'MC';
  };
  /**
   * Informations de paiement
   */
  paymentInfo: {
    method: 'card' | 'paypal' | 'apple_pay' | 'google_pay' | 'transfer';
    status: 'pending' | 'paid' | 'failed' | 'refunded';
    /**
     * ID de transaction du processeur de paiement
     */
    transactionId?: string | null;
    /**
     * Date et heure du paiement
     */
    paidAt?: string | null;
  };
  /**
   * Suivi de livraison
   */
  tracking?: {
    carrier?: ('colissimo' | 'chronopost' | 'ups' | 'dhl' | 'fedex') | null;
    /**
     * Numéro de suivi du colis
     */
    trackingNumber?: string | null;
    /**
     * Date d'expédition
     */
    shippedAt?: string | null;
    /**
     * Date de livraison
     */
    deliveredAt?: string | null;
  };
  /**
   * Notes internes sur la commande
   */
  notes?: string | null;
  /**
   * Commentaires du client
   */
  customerNotes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * Nom du produit (ex: TERRA Origin Stone White)
   */
  title: string;
  /**
   * URL du produit (auto-généré)
   */
  slug: string;
  collection: 'origin' | 'move' | 'limited';
  /**
   * Prix en euros
   */
  price: number;
  /**
   * Description détaillée du produit
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Description courte pour les cartes produits
   */
  shortDescription: string;
  /**
   * Images du produit (6-8 angles recommandés)
   */
  images?:
    | {
        image: number | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  colors: {
    /**
     * Nom de la couleur (ex: Stone White)
     */
    name: string;
    /**
     * Code couleur hex (ex: #F5F5F0)
     */
    value: string;
    /**
     * Images spécifiques à cette couleur
     */
    images?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  sizes: {
    size: '36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46';
    /**
     * Quantité en stock
     */
    stock: number;
    /**
     * Stock réservé (commandes en attente)
     */
    reservedStock?: number | null;
    /**
     * Stock disponible (stock - réservé)
     */
    availableStock?: number | null;
    /**
     * Seuil d'alerte stock faible
     */
    lowStockThreshold?: number | null;
    /**
     * Stock faible (alerte)
     */
    isLowStock?: boolean | null;
    /**
     * Rupture de stock
     */
    isOutOfStock?: boolean | null;
    id?: string | null;
  }[];
  /**
   * Score éco de 1 à 10
   */
  ecoScore: number;
  /**
   * Informations de durabilité
   */
  sustainability?: {
    materials?:
      | {
          /**
           * Nom du matériau (ex: Cuir Apple)
           */
          name: string;
          /**
           * Description du matériau
           */
          description: string;
          /**
           * Avantage écologique
           */
          sustainabilityBenefit: string;
          /**
           * Pourcentage dans le produit
           */
          percentage?: number | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Empreinte carbone en kg CO2
     */
    carbonFootprint?: number | null;
    /**
     * Pourcentage de matériaux recyclés
     */
    recycledContent?: number | null;
  };
  /**
   * Caractéristiques du produit
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Instructions d'entretien
   */
  careInstructions?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Produit mis en avant
   */
  isFeatured?: boolean | null;
  /**
   * Nouvelle arrivée
   */
  isNewArrival?: boolean | null;
  /**
   * Historique des mouvements de stock
   */
  stockHistory?:
    | {
        date: string;
        type: 'restock' | 'sale' | 'return' | 'adjustment' | 'reservation' | 'release';
        size: string;
        quantity: number;
        /**
         * Raison du mouvement
         */
        reason?: string | null;
        /**
         * Référence (numéro de commande, etc.)
         */
        reference?: string | null;
        id?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terra-collections".
 */
export interface TerraCollection {
  id: number;
  /**
   * Nom de la collection (ex: TERRA Origin)
   */
  name: string;
  /**
   * URL de la collection (ex: origin)
   */
  slug: string;
  /**
   * Slogan de la collection (ex: L'essentiel réinventé)
   */
  tagline: string;
  /**
   * Description détaillée de la collection
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Description courte pour les cartes
   */
  shortDescription: string;
  priceRange: {
    /**
     * Prix minimum
     */
    from: number;
    /**
     * Prix maximum (optionnel)
     */
    to?: number | null;
  };
  /**
   * Image principale de la collection
   */
  heroImage?: (number | null) | Media;
  /**
   * Image lifestyle de la collection
   */
  lifestyleImage?: (number | null) | Media;
  /**
   * Caractéristiques clés (3-5 max)
   */
  keyFeatures?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Matériaux utilisés dans la collection
   */
  materials?:
    | {
        /**
         * Nom du matériau
         */
        name: string;
        /**
         * Description du matériau
         */
        description: string;
        /**
         * Avantage écologique
         */
        sustainabilityBenefit: string;
        /**
         * Image du matériau
         */
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  craftsmanship?: {
    title?: string | null;
    /**
     * Description du savoir-faire
     */
    description?: string | null;
    /**
     * Statistiques du savoir-faire
     */
    stats?:
      | {
          stat: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Image du processus de fabrication
     */
    image?: (number | null) | Media;
  };
  /**
   * Guide de style pour la collection
   */
  stylingGuide?:
    | {
        /**
         * Nom du look (ex: Casual Urbain)
         */
        lookName: string;
        /**
         * Description du style
         */
        description?: string | null;
        /**
         * Image du look
         */
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Ordre d'affichage
   */
  order?: number | null;
  /**
   * Collection active
   */
  isActive?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  /**
   * Adresse email du client
   */
  email: string;
  /**
   * Prénom
   */
  firstName: string;
  /**
   * Nom de famille
   */
  lastName: string;
  /**
   * Numéro de téléphone
   */
  phone?: string | null;
  /**
   * Date de naissance (optionnel)
   */
  dateOfBirth?: string | null;
  /**
   * Adresses du client
   */
  addresses?:
    | {
        /**
         * Label de l'adresse (ex: Domicile, Travail)
         */
        label: string;
        /**
         * Adresse (rue, numéro)
         */
        street: string;
        city: string;
        postalCode: string;
        country: 'FR' | 'BE' | 'CH' | 'LU' | 'MC';
        /**
         * Adresse par défaut
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Préférences du client
   */
  preferences?: {
    /**
     * Collections préférées
     */
    favoriteCollections?: ('origin' | 'move' | 'limited')[] | null;
    /**
     * Pointures habituelles
     */
    preferredSizes?: ('36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46')[] | null;
    /**
     * Abonné à la newsletter
     */
    newsletterSubscribed?: boolean | null;
    /**
     * Consent marketing (SMS, emails promotionnels)
     */
    marketingConsent?: boolean | null;
  };
  /**
   * Statistiques client
   */
  stats?: {
    /**
     * Nombre total de commandes
     */
    totalOrders?: number | null;
    /**
     * Montant total dépensé
     */
    totalSpent?: number | null;
    /**
     * Panier moyen
     */
    averageOrderValue?: number | null;
    /**
     * Date de dernière commande
     */
    lastOrderDate?: string | null;
  };
  /**
   * Niveau de fidélité basé sur le montant dépensé
   */
  customerTier?: ('bronze' | 'silver' | 'gold' | 'platinum') | null;
  /**
   * Notes internes sur le client
   */
  notes?: string | null;
  /**
   * Tags pour catégoriser le client
   */
  tags?: ('vip' | 'influencer' | 'press' | 'employee' | 'problematic' | 'eco_conscious')[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  /**
   * Utilisateur propriétaire de cette adresse
   */
  user: number | User;
  /**
   * Type d'adresse
   */
  type: 'shipping' | 'billing';
  /**
   * Prénom du destinataire
   */
  firstName: string;
  /**
   * Nom du destinataire
   */
  lastName: string;
  /**
   * Nom de l'entreprise (optionnel)
   */
  company?: string | null;
  /**
   * Adresse principale (rue, numéro)
   */
  address1: string;
  /**
   * Complément d'adresse (appartement, étage, etc.)
   */
  address2?: string | null;
  /**
   * Ville
   */
  city: string;
  /**
   * Code postal
   */
  postalCode: string;
  /**
   * Pays
   */
  country: 'FR' | 'BE' | 'CH' | 'LU' | 'MC' | 'DE' | 'IT' | 'ES' | 'NL' | 'AT';
  /**
   * Numéro de téléphone (optionnel)
   */
  phone?: string | null;
  /**
   * Adresse par défaut pour ce type
   */
  isDefault?: boolean | null;
  /**
   * Nom personnalisé pour cette adresse (ex: "Maison", "Bureau")
   */
  label?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Suivi détaillé de tous les mouvements de stock
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stock-movements".
 */
export interface StockMovement {
  id: number;
  /**
   * Référence unique du mouvement (auto-généré)
   */
  reference: string;
  /**
   * Date et heure du mouvement
   */
  date: string;
  /**
   * Type de mouvement de stock
   */
  type: 'restock' | 'sale' | 'return' | 'adjustment' | 'reservation' | 'release' | 'loss' | 'sample' | 'initial';
  /**
   * Produit concerné par le mouvement
   */
  product: number | Product;
  /**
   * Taille concernée
   */
  size: '36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46';
  /**
   * Quantité (positive pour entrée, négative pour sortie)
   */
  quantity: number;
  /**
   * Stock avant le mouvement
   */
  stockBefore: number;
  /**
   * Stock après le mouvement
   */
  stockAfter: number;
  /**
   * Raison du mouvement (obligatoire)
   */
  reason: string;
  /**
   * Référence de commande (si applicable)
   */
  orderReference?: string | null;
  /**
   * Référence fournisseur (pour réapprovisionnements)
   */
  supplierReference?: string | null;
  /**
   * Coût unitaire (pour réapprovisionnements)
   */
  unitCost?: number | null;
  /**
   * Coût total du mouvement
   */
  totalCost?: number | null;
  /**
   * Utilisateur ayant effectué le mouvement
   */
  user?: (number | null) | User;
  /**
   * Notes additionnelles
   */
  notes?: string | null;
  /**
   * Mouvement automatique (via commande)
   */
  isAutomated?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Alertes automatiques de gestion des stocks
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stock-alerts".
 */
export interface StockAlert {
  id: number;
  /**
   * Référence unique de l'alerte
   */
  alertReference: string;
  /**
   * Type d'alerte
   */
  alertType: 'low_stock' | 'out_of_stock' | 'overstock' | 'restock_suggestion';
  /**
   * Priorité de l'alerte
   */
  priority: 'critical' | 'high' | 'medium' | 'low';
  /**
   * Produit concerné
   */
  product: number | Product;
  /**
   * Taille concernée
   */
  size: '36' | '37' | '38' | '39' | '40' | '41' | '42' | '43' | '44' | '45' | '46';
  /**
   * Stock actuel
   */
  currentStock: number;
  /**
   * Seuil qui a déclenché l'alerte
   */
  threshold?: number | null;
  /**
   * Quantité suggérée pour réapprovisionnement
   */
  suggestedQuantity?: number | null;
  /**
   * Message d'alerte détaillé
   */
  message: string;
  /**
   * Alerte résolue
   */
  isResolved?: boolean | null;
  /**
   * Date de résolution
   */
  resolvedAt?: string | null;
  /**
   * Résolu par
   */
  resolvedBy?: (number | null) | User;
  /**
   * Notes de résolution
   */
  resolutionNotes?: string | null;
  /**
   * Action entreprise
   */
  actionTaken?:
    | ('restocked' | 'discontinued' | 'threshold_adjusted' | 'false_alert' | 'waiting_supplier' | 'other')
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'terra-collections';
        value: number | TerraCollection;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'addresses';
        value: number | Address;
      } | null)
    | ({
        relationTo: 'stock-movements';
        value: number | StockMovement;
      } | null)
    | ({
        relationTo: 'stock-alerts';
        value: number | StockAlert;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  phone?: T;
  dateOfBirth?: T;
  avatar?: T;
  preferences?:
    | T
    | {
        newsletter?: T;
        smsNotifications?: T;
        emailNotifications?: T;
        language?: T;
        currency?: T;
      };
  orders?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  collection?: T;
  price?: T;
  description?: T;
  shortDescription?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  colors?:
    | T
    | {
        name?: T;
        value?: T;
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
        id?: T;
      };
  sizes?:
    | T
    | {
        size?: T;
        stock?: T;
        reservedStock?: T;
        availableStock?: T;
        lowStockThreshold?: T;
        isLowStock?: T;
        isOutOfStock?: T;
        id?: T;
      };
  ecoScore?: T;
  sustainability?:
    | T
    | {
        materials?:
          | T
          | {
              name?: T;
              description?: T;
              sustainabilityBenefit?: T;
              percentage?: T;
              id?: T;
            };
        carbonFootprint?: T;
        recycledContent?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  careInstructions?: T;
  isFeatured?: T;
  isNewArrival?: T;
  stockHistory?:
    | T
    | {
        date?: T;
        type?: T;
        size?: T;
        quantity?: T;
        reason?: T;
        reference?: T;
        id?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terra-collections_select".
 */
export interface TerraCollectionsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  tagline?: T;
  description?: T;
  shortDescription?: T;
  priceRange?:
    | T
    | {
        from?: T;
        to?: T;
      };
  heroImage?: T;
  lifestyleImage?: T;
  keyFeatures?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  materials?:
    | T
    | {
        name?: T;
        description?: T;
        sustainabilityBenefit?: T;
        image?: T;
        id?: T;
      };
  craftsmanship?:
    | T
    | {
        title?: T;
        description?: T;
        stats?:
          | T
          | {
              stat?: T;
              id?: T;
            };
        image?: T;
      };
  stylingGuide?:
    | T
    | {
        lookName?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  order?: T;
  isActive?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  status?: T;
  user?: T;
  customer?:
    | T
    | {
        email?: T;
        firstName?: T;
        lastName?: T;
        phone?: T;
      };
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        size?: T;
        color?: T;
        unitPrice?: T;
        totalPrice?: T;
        id?: T;
      };
  pricing?:
    | T
    | {
        subtotal?: T;
        shippingCost?: T;
        taxAmount?: T;
        discountAmount?: T;
        total?: T;
      };
  shippingAddress?:
    | T
    | {
        street?: T;
        city?: T;
        postalCode?: T;
        country?: T;
      };
  paymentInfo?:
    | T
    | {
        method?: T;
        status?: T;
        transactionId?: T;
        paidAt?: T;
      };
  tracking?:
    | T
    | {
        carrier?: T;
        trackingNumber?: T;
        shippedAt?: T;
        deliveredAt?: T;
      };
  notes?: T;
  customerNotes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  email?: T;
  firstName?: T;
  lastName?: T;
  phone?: T;
  dateOfBirth?: T;
  addresses?:
    | T
    | {
        label?: T;
        street?: T;
        city?: T;
        postalCode?: T;
        country?: T;
        isDefault?: T;
        id?: T;
      };
  preferences?:
    | T
    | {
        favoriteCollections?: T;
        preferredSizes?: T;
        newsletterSubscribed?: T;
        marketingConsent?: T;
      };
  stats?:
    | T
    | {
        totalOrders?: T;
        totalSpent?: T;
        averageOrderValue?: T;
        lastOrderDate?: T;
      };
  customerTier?: T;
  notes?: T;
  tags?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses_select".
 */
export interface AddressesSelect<T extends boolean = true> {
  user?: T;
  type?: T;
  firstName?: T;
  lastName?: T;
  company?: T;
  address1?: T;
  address2?: T;
  city?: T;
  postalCode?: T;
  country?: T;
  phone?: T;
  isDefault?: T;
  label?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stock-movements_select".
 */
export interface StockMovementsSelect<T extends boolean = true> {
  reference?: T;
  date?: T;
  type?: T;
  product?: T;
  size?: T;
  quantity?: T;
  stockBefore?: T;
  stockAfter?: T;
  reason?: T;
  orderReference?: T;
  supplierReference?: T;
  unitCost?: T;
  totalCost?: T;
  user?: T;
  notes?: T;
  isAutomated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stock-alerts_select".
 */
export interface StockAlertsSelect<T extends boolean = true> {
  alertReference?: T;
  alertType?: T;
  priority?: T;
  product?: T;
  size?: T;
  currentStock?: T;
  threshold?: T;
  suggestedQuantity?: T;
  message?: T;
  isResolved?: T;
  resolvedAt?: T;
  resolvedBy?: T;
  resolutionNotes?: T;
  actionTaken?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}